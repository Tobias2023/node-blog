{"version":3,"file":"static/js/bundle.05d9dd0e.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/components/comment-form/index.tsx","webpack:///./src/components/article/markdown-body.tsx"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { keyframes } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { isEmail, isEmpty, isURL } from 'validator';\r\nimport axios from '../../utils/axios';\r\n\r\nconst bounce = keyframes`\r\n  from, 20%, 53%, 80%, to {\r\n    transform: translate3d(0,0,0);\r\n    border-bottom: 1px solid #f90000\r\n  }\r\n\r\n  40%, 43% {\r\n    transform: translate3d(0, -30px, 0);\r\n  }\r\n\r\n  70% {\r\n    transform: translate3d(0, -15px, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(0,-4px,0);\r\n  }\r\n`;\r\nconst CommentFormWrap = styled.form((_) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n}));\r\n\r\nconst Notice = styled.p((_) => ({\r\n    color: '#9e9e9e',\r\n    margin: '8px 0',\r\n    textAlign: 'center'\r\n}));\r\n\r\nconst FormInline = styled.div((_) => ({\r\n    display: 'flex',\r\n    marginBottom: '10px'\r\n}));\r\n\r\nconst FormGroup = styled.div((_) => ({\r\n    // display: 'flex',\r\n    // flex: '1 0 auto',\r\n    marginRight: '5px',\r\n    marginLeft: '20px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    // backgroundColor: '#f5f5f5',\r\n    borderRadius: '2px'\r\n}));\r\n\r\nconst FormLabel = styled.label((_) => ({\r\n    // alignItems: 'center',\r\n    color: '#333',\r\n    // display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '3px 0 3px 8px',\r\n    whiteSpace: 'nowrap',\r\n    '>.red': {\r\n        color: '#f90000'\r\n    }\r\n}));\r\n\r\nconst FormInput = styled.input((props: { isError?: boolean }) => ({\r\n    color: '#333',\r\n    flex: '1 0 auto',\r\n    marginLeft: '-1px',\r\n    padding: '3px 0',\r\n    // backgroundColor: '#f5f5f5',\r\n    height: '36px',\r\n    boxSizing: 'border-box',\r\n    border: '1px solid #efefef',\r\n    paddingLeft: '5px',\r\n    width: '50%',\r\n    ...props.isError ? { animation: `${bounce} 1s ease infinite` } : {},\r\n    '&:focus': {\r\n        outline: 'none'\r\n    },\r\n    '&:-webkit-autofill': {\r\n        boxShadow: '0 0 0 60px #f5f5f5 inset',\r\n        WebkitTextFillColor: '#878787',\r\n    },\r\n    '&:-webkit-autofill:hover': {\r\n        boxShadow: '0 0 0 60px #f5f5f5 inset',\r\n        WebkitTextFillColor: '#878787',\r\n    },\r\n    '&:-webkit-autofill:focus': {\r\n        boxShadow: '0 0 0 60px #f5f5f5 inset',\r\n        WebkitTextFillColor: '#878787',\r\n    }\r\n}));\r\n\r\nconst ContentWrap = styled.div((_) => ({\r\n    marginBottom: '10px'\r\n}));\r\n\r\nconst Textarea = styled.textarea((props: { isError?: boolean }) => ({\r\n    // border: 'none',\r\n    width: '80%',\r\n    padding: '12px',\r\n    // backgroundColor: '#f5f5f5',\r\n    minHeight: '90px',\r\n    border: '1px solid #efefef',\r\n    marginLeft: '20px',\r\n    '&:focus': {\r\n        outline: 'none'\r\n    },\r\n    boxSizing: 'border-box',\r\n    ...props.isError ? { animation: `${bounce} 1s ease infinite` } : {},\r\n}));\r\n\r\nconst Footer = styled.div((_) => ({\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    transition: 'all .4s ease-in'\r\n}));\r\n\r\nconst Button = styled.button((_) => ({\r\n    // backgroundColor: 'rgba(2, 117, 216, 0.5)',\r\n    // border: 'none',\r\n    // borderRadius: '3px',\r\n    color: '#fff',\r\n    cursor: 'pointer',\r\n    fontSize: '14px',\r\n    fontWeight: 400,\r\n    padding: '10px 12px',\r\n    textAlign: 'center',\r\n\r\n    // width: '100%',\r\n    border: '1px solid #6190e8',\r\n    borderRadius: '5px',\r\n    backgroundColor: '#6190e8'\r\n}));\r\n\r\nconst ErrorTipDiv = styled.p((_) => ({\r\n    color: '#721c24',\r\n    textAlign: 'center',\r\n    margin: '0 0 10px 0',\r\n    backgroundColor: '#f8d7da',\r\n    padding: '8px 0',\r\n    borderRadius: '4px',\r\n    border: '1px solid #f5c6cb'\r\n}));\r\n\r\ninterface Props {\r\n    url: string;\r\n    replyId?: string;\r\n    articleId?: string;\r\n}\r\n\r\nclass CommentForm extends Component<Props, any> {\r\n    public state = {\r\n        isValidationErrors_nickName: false,\r\n        isValidationErrors_email: false,\r\n        isValidationErrors_website: false,\r\n        isValidationErrors_content: false,\r\n        buttonLoading: false,\r\n        errorText: ''\r\n    };\r\n    public render() {\r\n        return (\r\n            <CommentFormWrap ref=\"form\">\r\n                <Notice>电子邮件地址不会被公开。必填项已用*标注</Notice>\r\n                <FormLabel>昵称<span className=\"red\">*</span>：</FormLabel>\r\n                <FormGroup>\r\n                    <FormInput isError={this.state.isValidationErrors_nickName} id=\"nickName\" name=\"nickName\" placeholder=\"请输入你的昵称\" type=\"text\" />\r\n                </FormGroup>\r\n                <FormLabel>邮箱<span className=\"red\">*</span>：</FormLabel>\r\n                <FormGroup>\r\n                    <FormInput isError={this.state.isValidationErrors_email} id=\"email\" name=\"email\" placeholder=\"请输入你的email\" type=\"text\" />\r\n                </FormGroup>\r\n                <FormLabel>网址：</FormLabel>\r\n                <FormGroup>\r\n                    <FormInput isError={this.state.isValidationErrors_website} id=\"website\" name=\"website\" placeholder=\"如：https://www.lizc.me\" type=\"text\" />\r\n                </FormGroup>\r\n                <FormLabel>你要留的言<span className=\"red\">*</span>：</FormLabel>\r\n                <ContentWrap>\r\n                    <Textarea isError={this.state.isValidationErrors_content} id=\"content\" name=\"content\" rows={3} placeholder=\"留点空白给你说~\"></Textarea>\r\n                </ContentWrap>\r\n                {this.state.errorText && <ErrorTipDiv>{this.state.errorText}</ErrorTipDiv>}\r\n                <Footer>\r\n                    <Button disabled={this.state.buttonLoading} type=\"button\" className=\"CommentForm-submit\" onClick={() => this.submit()}>\r\n                        {this.state.buttonLoading && <i className=\"fa fa-spinner fa-pulse fa-fw\"></i>} 提 交\r\n                    </Button>\r\n                </Footer>\r\n            </CommentFormWrap>\r\n        );\r\n    }\r\n    public submit() {\r\n        const form: any = ReactDOM.findDOMNode(this.refs.form);\r\n        const elements: [{ name: string, value: string }] = form.elements;\r\n        const data: any = {\r\n            article: this.props.articleId\r\n        };\r\n        for (const ele of Array.from(elements)) {\r\n            if (ele.name) { data[ele.name] = ele.value; }\r\n        }\r\n        const lay = () => setTimeout(() => {\r\n            this.setState({\r\n                isValidationErrors_nickName: false,\r\n                isValidationErrors_email: false,\r\n                isValidationErrors_website: false,\r\n                isValidationErrors_content: false\r\n            });\r\n        }, 800);\r\n        if (isEmpty(data.nickName)) {\r\n            return this.setState({\r\n                isValidationErrors_nickName: true\r\n            }, lay);\r\n        } else if (!isEmail(data.email)) {\r\n            return this.setState({\r\n                isValidationErrors_email: true\r\n            }, lay);\r\n        } else if (!isEmpty(data.website) && !isURL(data.website)) {\r\n            return this.setState({\r\n                isValidationErrors_website: true\r\n            }, lay);\r\n        } else if (isEmpty(data.content)) {\r\n            return this.setState({\r\n                isValidationErrors_content: true\r\n            }, lay);\r\n        }\r\n        if (this.props.replyId) {\r\n            Object.assign(data, {\r\n                reply: this.props.replyId\r\n            });\r\n        }\r\n        this.setState({\r\n            buttonLoading: true\r\n        });\r\n        axios.post(this.props.url, data).then(() => {\r\n            location.reload();\r\n        }).catch((err) => {\r\n            const res = err.response;\r\n            if (res.status === 429) {\r\n                this.setState({\r\n                    errorText: '对不起！您的ip存在异常行为，系统已暂时禁止提交！',\r\n                    buttonLoading: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errorText: 'sorry！系统异常，正在修复中。。。',\r\n                    buttonLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CommentForm;","import styled from '@emotion/styled';\r\nimport React from 'react';\r\n\r\nconst Div = styled.div`\r\n    &.markdown-body {\r\n        font-family: Lato,Helvetica Neue For Number,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif;\r\n        font-size: 14px;\r\n        line-height: 2;\r\n    }\r\n    p {\r\n        margin: 0 0 20px 0;\r\n        font-size: 14px;\r\n    }\r\n    h1, h2, h3, h4, h5, h6 {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-weight: bold;\r\n        line-height: 1.5;\r\n        font-family: 'Roboto Slab', 'Monda', \"PingFang SC\", \"Microsoft YaHei\", sans-serif;\r\n        margin: 20px 0 15px;\r\n    }\r\n    a {\r\n        color: #0366d6;\r\n        text-decoration: none;\r\n        word-wrap: break-word;\r\n    }\r\n    ul li {\r\n        list-style: circle;\r\n    }\r\n    pre, code {\r\n        font-family: 'PT Mono', consolas, Menlo, \"PingFang SC\", \"Microsoft YaHei\", monospace;\r\n    }\r\n    img {\r\n        box-sizing: border-box;\r\n        margin: auto;\r\n        padding: 3px;\r\n        max-width: 100%;\r\n        height: auto;\r\n        margin: 0 auto;\r\n    }\r\n    pre {\r\n        overflow: auto;\r\n        margin: 20px 0;\r\n        padding: 0;\r\n        font-size: 13px;\r\n        color: #4d4d4c;\r\n        background: #f7f7f7;\r\n        line-height: 1.6;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        background-color: #f7f7f7;\r\n        padding: 10px 0;\r\n    }\r\n    blockquote {\r\n        margin: 0;\r\n        padding: 0;\r\n        padding: 0 15px;\r\n        color: #666;\r\n        border-left: 4px solid #ddd;\r\n        background: #f0f0f0;\r\n    }\r\n    .hljs{display:block;overflow-x:auto;padding:0.5em;background:#F0F0F0}.hljs,.hljs-subst{color:#444}.hljs-comment{color:#888888}.hljs-keyword,.hljs-attribute,.hljs-selector-tag,.hljs-meta-keyword,.hljs-doctag,.hljs-name{font-weight:bold}.hljs-type,.hljs-string,.hljs-number,.hljs-selector-id,.hljs-selector-class,.hljs-quote,.hljs-template-tag,.hljs-deletion{color:#880000}.hljs-title,.hljs-section{color:#880000;font-weight:bold}.hljs-regexp,.hljs-symbol,.hljs-variable,.hljs-template-variable,.hljs-link,.hljs-selector-attr,.hljs-selector-pseudo{color:#BC6060}.hljs-literal{color:#78A960}.hljs-built_in,.hljs-bullet,.hljs-code,.hljs-addition{color:#397300}.hljs-meta{color:#1f7199}.hljs-meta-string{color:#4d99bf}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:bold}\r\n`;\r\n\r\nexport default (props: any) => (\r\n    <Div\r\n        className=\"markdown-body\"\r\n        dangerouslySetInnerHTML={{\r\n            __html: props.content\r\n        }}\r\n    >\r\n    </Div>\r\n);"],"mappings":"AACA;;;;;;;;;;;;;;;;;ACwBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuCA","sourceRoot":""}